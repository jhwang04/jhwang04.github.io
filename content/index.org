#+TITLE: Justin Hwang
#+AUTHOR: Justin Hwang

#+BEGIN_COMMENT
#+SETUPFILE: https://fniessen.github.io//org-html-themes/org/theme-readtheorg.setup
#+END_COMMENT
#+SETUPFILE: ../ReadTheOrgSetupFile.setup
{{{disable-search}}}

# INSTRUCTIONS FOR USE:
# https://systemcrafters.net/publishing-websites-with-org-mode/building-the-site/
#
# 1) Open a shell and run ./build.sh in the jhwang04.github.io directory to build the site
# 2) Run M-x httpd-serve-directory in the docs directory to start a local preview instance
# 3) Open localhost:8080 to preview the site
# 4) Commit and push to github

[[./assets/portrait.jpg]]

B.S. in Computer Engineering (Spring 2027) \\
Concentrations in Computing Hardware and Robotics \\
Minor in Korean Language (Fall 2024)

\\
\\
\\
* About Me
I am a second-year Computer Engineering major with concentrations in Computing Hardware and Robotics. I chose this
field of study because I wanted to learn how computers work on a fundamental level and develop programming
skills with concrete applications. I take pride in the quality of the work I produce, and I love working
alongside others who feel the same way.

One of these physical applications is with Hytech Racing, Georgia Tech's Electric FSAE team.
Over the past few semesters, I have learned electric engineering fundamentals and contributed
to a revamped firmware system. For the 2024-25 school year, I am Hytech's Low Voltage Electronics
lead. I am responsible for all LV board design, fabrication, and wire harnessing, as well as all
firmware for this year's car.

In my free time, I like to play intramural sports, sing in Georgia Tech Chamber Choir, run,
and attend meetings for a campus ministry (Reformed University Fellowship).

\\
\\
\\
* Resume

#+begin_export html
<embed src="./assets/resume/Hwang_Justin_Resume.pdf" width="600" height="780" type="application/pdf">
#+end_export

\\
\\
\\
* Career Goals
In the next few years, I hope to graduate with a Master's degree in Electrical and Computer
Engineering and work full-time.

I plan to stay involved in Hytech Racing over the next few years to gain practical engineering experience. I have
found that I really enjoy the fast-paced environment and I'm excited to see what else I will learn.

I also plan on learning as much as I can while working at Tesla this summer and applying those
skills to other technical projects.

\\
\\
\\
* Projects

** Laser cut nameplates /(Fall 2024)/
When living on-campus, RAs usually print nameplates for every apartment door. These always annoyed
me slightly, so I decided to use the laser cutters at one of GT's makerspaces to make my own.

[[./assets/nameplates.png]]

** Minecraft Redstone Computer /(Fall 2024)/
In my Digital Design classes, I constantly thought /hmm, I could make this in Minecraft/. Growing
up, I'd spent countless hours using the in-game circuit system to make variou small mechanisms,
but the same transistor-level building blocks could theoretically be used to make a full
computer. So, my roommates and I decided to start up a new server to build a Turing-complete
computer, starting with the simplest gates and progressing through a fully-functional processor,
including a 16-bit adder, addressable RAM, a program counter, a logical unit, and a
4-digit hex display.

** HyTech Racing Training Curriculum /(Fall 2024 - Present)/
At HyTech Racing, our car becomes more complex every year. As a result, the learning curve for
new members becomes steeper every year. I wanted to increase two things: the number of actively-contributing
members, and the contributions of each member. To this end, I designed a guided, asynchronous
set of training modules that forms a semester-long curriculum. /[[./hytechtraining/hytechtraining.html][(read more)]]/

#+attr_html: :width 400px :align center
[[../assets/hytechtraining/keychain.png]]

** Emacs Org note-taking /(Spring 2024 - Present)/
During CS classes, I take notes using a combination of Emacs Org-mode and LaTeX. This allows
me to take notes in a markdown-like environment, but compile it into clean PDFs. Emacs is
highly configurable, and I have really enjoyed using various features to take notes quickly
and elegantly during class. /[[./noteTaking/noteTaking.html][(read more)]]/

#+attr_html: :width 400px :align center
[[../assets/noteTaking/notesPage28.png]]

** JUnit-style test cases /(Fall 2023 - Spring 2024)/
In my Object-Oriented Programming (CS 1331) and Data Structures/Algorithsm (CS 1332) classes,
students are encouraged to share tester files for the homework assignments on the class forum.
My friend and I began working together to write the most elegant, thorough, and compartmentalized
tester files to monopolize the market. *In total, we published over 25,000 lines of code and
reached an estimated 4,000+ downloads.* /[[./junits/junits.html][(read more)]]/

#+attr_html: :width 700px :align center
[[../assets/driverImage.png]]

** Thermistor Board Project (Hytech Racing) /(Fall 2023)/
For Hytech, we needed an array of thermistors to measure temperature data at many different
points. Initially, this was designed to measure data in an array between two large aluminum
plates to to verify their thermal properties. /[[./thermistorBoard/thermistorBoard.org][(read more)]]/

#+attr_html: :width 400px :align center
[[../assets/thermistor_board/Thermistor_Board_multiplexer_layout.png]]

* Relevant Coursework

** Architecture, Systems, Concurrency, and Energy in Computation (Spring 2025)
From the [[https://catalog.gatech.edu/courses-undergrad/ece][course catalog]] (ECE 3058)
#+begin_quote
Basic organizational principles of the major components of a processor - The core, memory,
hierarchy, I/O subsystem, and basic operating system constraints that utilize them.
#+end_quote

** Signal Processing (Spring 2025)
From the [[https://catalog.gatech.edu/courses-undergrad/ece][course catalog]] (ECE 2026)
#+begin_quote
Introduction to discrete-time and continuous-time signals. Filtering. Frequency response.
Fourier Transform. Z transform. Laboratory emphasizes computer-based signal processing.
#+end_quote

** Programming for Hardware and Software Systems (Fall 2024)
From the [[https://catalog.gatech.edu/courses-undergrad/ece][course catalog]] (ECE 2035):
#+begin_quote
Creation of complex execution and storage mechanisms, based on instruction set architecture, for
software design including high-level programming languages and operating systems.
#+end_quote

** Digital Design Laboratory (Fall 2024)
From the [[https://catalog.gatech.edu/courses-undergrad/ece][course catalog]] (ECE 2031):
#+begin_quote
Design and implementation of digital systems, including a team design project. CAD tools, project
design methodologies, logic synthesis, and assembly language programming.
#+end_quote
** Circuit Analysis (Fall 2024)
From the [[https://catalog.gatech.edu/courses-undergrad/ece][course catalog]] (ECE 2040):
#+begin_quote
Basic concepts of DC and AC circuit theory and analysis.
#+end_quote
** Data Structures & Algorithms (Spring 2024)
From the [[https://catalog.gatech.edu/courses-undergrad/cs][course catalog]] (CS 1332):
#+begin_quote

Computer data structures and algorithms in the context of object-oriented programming.
Focus on software development towards applications.
#+end_quote

** Discrete Math for CS (Spring 2024)
From the [[https://catalog.gatech.edu/courses-undergrad/cs][course catalog]] (CS 2050):
#+begin_quote

Proof methods, strategy, correctness of algorithms over discrete structures. Induction and
recursion. Complexity and order of growth. Number theoretic principles and algorithms.
Counting and computability.
#+end_quote

** Intro Physics II (Spring 2024)

From the [[https://catalog.gatech.edu/courses-undergrad/phys][course catalog]] (PHYS 2212):
#+begin_quote

A calculus-based course with laboratory covering electromagnetism, applications of
electromagnetism, light, and modern physics.
#+end_quote

** Digital Systems & Design (Fall 2023)
From the [[https://catalog.gatech.edu/courses-undergrad/ece][course catalog]] (ECE 2020):
#+begin_quote

Computer system and digital design principles. Switch and gate design, Boolean algebra, [...]
storage elements. Datapath, memory organization, instruction set architecture, assembly
language.
#+end_quote


* Contact
GitHub: [[https://github.com/jhwang04][@jhwang04]] \\
LinkedIn: [[https://linkedin.com/in/justin-intae-hwang][Justin Hwang]] \\
Email: justin@goliath.org
